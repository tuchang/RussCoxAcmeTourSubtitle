1
00:00:01,001 --> 00:00:06,99
Welcome. This is a quick tour of Acme, a text editor created by Rob Pike almost 20 years ago as part of Plan 9.

3
00:00:07,001 --> 00:00:11,561
Although Rob created Acme on Plan 9, Acme is now available on FreeBSD, Linux,...

4
00:00:11,571 --> 00:00:15,231
OS X and other Unix systems as part of Plan 9 from User Space.

5
00:00:16,001 --> 00:00:20,99
There is also a port of Acme to the Inferno operating system which gives it a way to running on Windows.

7
00:00:21,001 --> 00:00:25,049
The video description has a link to a page which points to downloads and more information.

9
00:00:26,001 --> 00:00:29,958
For me, the distinguishing feature of Acme is it works well alongside the...

10
00:00:29,968 --> 00:00:33,991
surrounding system instead of trying to be a complete environment all by itself.

11
00:00:34,001 --> 00:00:38,141
Acme does not enjoy nearly the popularity of editors like Emacs and VI do,

13
00:00:39,001 --> 00:00:41,001
but it has a small dedicated following.

14
00:00:41,001 --> 00:00:45,001
When I had to switch to using Unix workstations again in the early 2000's,

15
00:00:45,001 --> 00:00:49,001
I missed Acme so much that I ported all Plan 9 user programs to Unix to get it back.

17
00:00:50,001 --> 00:00:53,408
Acme creates an experience where text is a dynamic thing and you can execute it,

18
00:00:53,418 --> 00:00:54,991
and assign it arbitrary meanings.

19
00:00:55,001 --> 00:00:59,441
where plugin written in any language at all can interact with Acme to control windows.

21
00:01:00,001 --> 00:01:05,001
The result is that you can keep using the tools you have instead of having to learn the whole new system.

23
00:01:05,001 --> 00:01:07,661
But you can still customize them to fit well into Acme.

24
00:01:08,001 --> 00:01:12,001
In this screencast I am going to try to convey a few of what it is like to use Acme.

26
00:01:12,001 --> 00:01:16,001
I am going to start with the basics and build up to a short programming session at the end.

28
00:01:16,001 --> 00:01:22,001
One final note before the content, I sized the video to fit Youtube large vidoe playing mode exactly.

30
00:01:22,001 --> 00:01:25,421
If the screen text look fuzzy, please switch to that mode.

31
00:01:29,001 --> 00:01:30,991
Because Acme was designed as part of Plan 9,

32
00:01:31,001 --> 00:01:35,631
it is a graphical program, not cursor addressed, and makes extensive use of the mouse.

34
00:01:36,001 --> 00:01:38,991
This screen you are looking at is a small Acme screen.

35
00:01:39,001 --> 00:01:42,181
Its size fits exactly to Youtube 854 by 480 video box.

36
00:01:43,001 --> 00:01:44,991
Normally you use a larger display.

37
00:01:45,001 --> 00:01:48,781
I'd like to to use Acme with fullscreen as you see in the video.

38
00:01:48,781 --> 00:01:53,001
On a laptop I foot back and forth between Acme and conventional desktop.

39
00:01:53,001 --> 00:01:57,001
When I work I use two monitors, where Acme on one, and everything else on the other.

40
00:01:57,001 --> 00:02:00,001
Acme takes care of window layout for you.

41
00:02:00,001 --> 00:02:04,001
It automatically choosing location for each window and arrange them into columns.

42
00:02:04,001 --> 00:02:06,001
In this tour, Acme has just two columns.

43
00:02:06,001 --> 00:02:09,001
On larger screens, it can comfortablly supports 3 or 4.

44
00:02:09,001 --> 00:02:12,001
Each column contains some number of windows.

45
00:02:12,001 --> 00:02:17,001
On the screen right now, the left column contains the single window showing a quick UI tour.

46
00:02:17,001 --> 00:02:21,001
And the right column contains two windows showing a directory and a shell session.

48
00:02:21,001 --> 00:02:23,001
Each window has two parts. 

49
00:02:23,001 --> 00:02:27,001
The top line, or tag, set on light blue background,

50
00:02:27,001 --> 00:02:30,001
shows the filename and some commands such as Del and Snarf.

51
00:02:30,001 --> 00:02:35,001
The body, set on light yellow background, shows the window content.

52
00:02:35,001 --> 00:02:39,001
Each tag has a nearly square layout box to the left of the tag.

53
00:02:39,001 --> 00:02:44,001
The layout box fills with dark blue when a window has editing that indicates you might want to save it.

54
00:02:44,001 --> 00:02:46,001
Each column also has a  tag 

55
00:02:46,001 --> 00:02:50,001
with some useful commands and layout box at the tone.

56
00:02:50,001 --> 00:02:53,001
Because Acme was created on Plan 9, 

57
00:02:53,001 --> 00:02:56,001
its UI assumes that you have a three-button mouse and a graphical display.

58
00:02:56,001 --> 00:02:59,001
There is no text-only mode or cursor addressing.

59
00:02:59,001 --> 00:03:03,001
Since you cannot watch my hand using the mouse on the screencast,

60
00:03:03,001 --> 00:03:07,001
I have to modiy Acme to show the buttons that are currently held down at the mouse pointer.

61
00:03:07,001 --> 00:03:13,001
Acme refers left, middle, and right buttons as button 1, button 2, and button 3.

62
00:03:13,001 --> 00:03:17,001
The scroll bar to the left of the body is a vetnum standard,

63
00:03:17,001 --> 00:03:19,001
but more powerful than most.

64
00:03:19,001 --> 00:03:23,001
When you have a window that cannot be shown at once like the silly sampler.

65
00:03:26,001 --> 00:03:33,001
The scroll bar darkens to represent the entire content, with the light bar showing currently you are viewing.

66
00:03:33,001 --> 00:03:37,001
You can click the bar with button 2 to move it to different part of the text.

67
00:03:37,001 --> 00:03:42,001
You can also click with button 1 to scroll up or button 3 to scroll down.

68
00:03:42,001 --> 00:03:49,001
The amount of these clicks to scroll depends on where on the scroll bar you click.

69
00:03:49,001 --> 00:03:53,001
If you click just one line down from the top, each click scrolls by one line.

70
00:03:53,001 --> 00:03:58,001
If you click three quaters away down from the window, 

71
00:03:58,001 --> 00:04:00,001
each click scrolls by three quaters of the window.

72
00:04:02,001 --> 00:04:05,001
You can also use the mouse to manipulate the window by

73
00:04:05,001 --> 00:04:06,001
clicking in the layout box.

74
00:04:07,001 --> 00:04:10,001
Clicking button 1 expands the window in the column,

75
00:04:10,001 --> 00:04:11,001
nugging other windows away.

76
00:04:11,001 --> 00:04:16,001
Dragging button 1 reposition the window without moving others.

77
00:04:16,001 --> 00:04:22,001
Clicking button 2 makes the window as big as possible while leaving the other windows tags visible.

78
00:04:22,001 --> 00:04:27,001
Clicking button 3 makes the window take over the entire column, hiding the other windows.

79
00:04:27,001 --> 00:04:32,001
Clicking one of the other buttons brings them back.

80
00:04:46,001 --> 00:04:50,001
When manipulating text within Acme, the three buttons have distinct roles.

81
00:04:50,001 --> 00:04:52,001
Button 1 is for selecting text.

82
00:04:54,001 --> 00:04:57,001
Button 2 is for executing commands.

83
00:04:57,001 --> 00:05:01,001
For example, I have been clicking the "Slide+" command to advance to the next slide.

84
00:05:01,001 --> 00:05:04,001
Button 3 is for searching and loading.

85
00:05:04,001 --> 00:05:10,001
If I select the word "button"  with button 3, Acme searches for the next instance of the word "button" and moves to it.

86
00:05:10,001 --> 00:05:15,001
In the directory window, if I select the filename "sampler" with button 3,

87
00:05:15,001 --> 00:05:18,001
Acme opens a new window for that file.

88
00:05:18,001 --> 00:05:23,001
I can then execute, using button 2, the command "Del" to close the window.

89
00:05:23,001 --> 00:05:28,001
I do not have to select text so carefully, when using button 2 or 3,

90
00:05:28,001 --> 00:05:32,001
Acme would expend an ordinary click into selection of the given word.

91
00:05:32,001 --> 00:05:38,001
So I can just right click on "button", or on "sampler", and just middle click "Del".

92
00:05:40,001 --> 00:05:45,001
Acme also assigns convinient meaning to combinations of buttons. 

93
00:05:45,001 --> 00:05:47,001
If you select some text with  button 1,

94
00:05:47,001 --> 00:05:51,001
but keep it held down, then clicking button 2 cuts that text.

95
00:05:51,001 --> 00:05:54,001
Clicking button 3 pastes over the text.

96
00:05:54,001 --> 00:05:55,001
Cut

97
00:05:55,001 --> 00:05:57,001
Paste

98
00:06:00,001 --> 00:06:04,001
A frequent motion is to combine the two -- selecting text with button 1

99
00:06:04,001 --> 00:06:09,001
Clicking button 2 to cut it, and click button 3 to paste it back, before releasing button 1.

100
00:06:09,001 --> 00:06:10,001
that amounts to "Copy".

101
00:06:10,001 --> 00:06:14,001
A less common "chord" is to select text with button 2 for executing, but

102
00:06:14,001 --> 00:06:19,001
add button 1 to the cord. That executes that command with an argument.

103
00:06:20,001 --> 00:06:27,001
For example, we can execute the command "echo" with argument "button".

104
00:06:31,001 --> 00:06:35,001
Let's look a little more in depth at executing commands with button 2.

105
00:06:35,001 --> 00:06:39,001
We'v seen that useful commands like Del are listed  in the window tag.

106
00:06:39,001 --> 00:06:42,001
But the tag is just a nice place to put text that doesn't belong to the body.

107
00:06:42,001 --> 00:06:44,001
Text at anywhere can be executed.

108
00:06:44,001 --> 00:06:49,001
For example, I can select the word "Cut" here with button 1,

109
00:06:49,001 --> 00:06:53,001
and click on it with button 2 to execute it. It cuts itself.

110
00:06:53,001 --> 00:06:59,001
Similarly, I can select something else, and then execute "Paste".

111
00:06:59,001 --> 00:07:00,001
to paste what I cut.

112
00:07:00,001 --> 00:07:08,001
There is also a useful builtin command called "Edit" , that accepts the editing language used in the editor Sam.

113
00:07:11,001 --> 00:07:19,001
If I execute the comand "Edit, s/tag/TAG/g", it apply the "s" command to entire window body, denoted by comma.

114
00:07:22,001 --> 00:07:27,001
Acme would not be very powerful though if all the commands have to be provided by Acme itself.

115
00:07:27,001 --> 00:07:33,001
External programs can be invoked as commands too, like we do with "echo", similar to running them in the shell prompt.

116
00:07:33,001 --> 00:07:40,001
Executing "date" actually runs the "date" program and put the output in a temporary window created to hold the output.

117
00:07:40,001 --> 00:07:47,001
When you run a command in a particular directory, the window for the output has a title name for a file "+Errors" in that directory,

118
00:07:47,001 --> 00:07:53,001
although that is a name of a file that does not exist on disk. It is just the Acme title for the window.

119
00:07:53,001 --> 00:07:58,001
In addtion to running commands, we can pipe selected text through commands.

120
00:07:58,001 --> 00:08:05,001
For example, I can selet top few lines and execute "|rot13" to pipe the text through rot13 program,

121
00:08:05,001 --> 00:09:00,001
and replace the selection with that program's output.

122
00:09:00,001 --> 00:08:14,001
Commands beginning with ">" represents a pipe only write selection through that program.

123
00:08:14,001 --> 00:08:17,001
It does not read the output back into the selection.